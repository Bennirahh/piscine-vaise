{% extends 'base.html.twig' %}

{% block body %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Créer une nouvelle réservation</title>
    <link rel="stylesheet" href="{{ asset('css/theme.css') }}">
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet"/>
</head>
<body class="bg-white">

{% if not app.user %}
    <!-- Pop-up pour avertir l'utilisateur de se connecter -->
    <div id="loginPopup" class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
        <div class="bg-white p-8 rounded-lg shadow-lg w-1/3">
            <h2 class="text-xl font-bold text-center mb-4">Veuillez vous connecter</h2>
            <p class="text-center mb-4">Pour effectuer une réservation, vous devez être connecté.</p>
            <div class="text-center">
                <a href="{{ path('app_login') }}" class="bg-green-600 text-white px-4 py-2 rounded-lg">Se connecter</a>
            </div>
        </div>
    </div>
{% else %}
    <div class="p-16">
        <div class="grid grid-cols-3">
            <div class="grid grid-cols-5 text-center">
                <img src="../img/reservation-check.png" alt="" class="w-[20%] mx-auto">
                <p class="text-green-600">Panier</p>
                <div class="border-green-600 border-b-2 my-auto"></div>
                <img src="../img/reservation-check-gris.png" alt="" class="w-[20%] mx-auto">
                <p>Validation</p>
            </div>
        </div>

        <div class="pl-16 pt-10">
            <h1 class="text-xl font-bold">Détails de la commande</h1>
        </div>
        <div class="grid grid-cols-3 gap-4 pl-16 pr-[15%] pt-10">
            <div class="col-span-2">
                <div class="mb-4">
                    <label class="font-bold" for="">Prénom</label>
                    <div class="border-2 border-[#B6BAAC] p-2 rounded-lg">
                        <p>{{ app.user.UserName }}</p>
                    </div>
                </div>
                <div class="mb-4">
                    <label class="font-bold" for="">Nom</label>
                    <div class="border-2 border-[#B6BAAC] p-2 rounded-lg">
                        <p>{{ app.user.UserFirstName }}</p>
                    </div>
                </div>
                <div class="mb-4">
                    <label class="font-bold" for="">Email</label>
                    <div class="border-2 border-[#B6BAAC] p-2 rounded-lg">
                        <p>{{ app.user.email }}</p>
                    </div>
                </div>
                {{ form_start(form) }}
                <div class="mb-4">
                    <label class="font-bold" for="">Catégorie de la réservation</label>
                    {{ form_widget(form.reservationCategory, {'attr': {'class': 'border-2 border-[#B6BAAC] p-2 rounded-lg w-full'}}) }}
                </div>
                <div id="eventSection" class="mb-4" style="display: none;">
                    <label class="font-bold" for="">Événement</label>
                    {{ form_widget(form.event, {'attr': {'class': 'border-2 border-[#B6BAAC] p-2 rounded-lg w-full'}}) }}
                </div>
                <div id="eventDateSection" class="mb-4" style="display: none;">
                    <label class="font-bold" for="">Date de l'événement</label>
                    <div class="border-2 border-[#B6BAAC] p-2 rounded-lg">
                        <p id="eventDate"></p>
                    </div>
                </div>
                <div id="locationSection" class="mb-4" style="display: none;">
                    <label class="font-bold" for="">Lieu</label>
                    {{ form_widget(form.location, {'attr': {'class': 'border-2 border-[#B6BAAC] p-2 rounded-lg w-full'}}) }}
                </div>
                <div id="equipementSection" class="mb-4" style="display: none;">
                    <label class="font-bold" for="">Équipement</label>
                    {{ form_widget(form.equipement, {'attr': {'class': 'border-2 border-[#B6BAAC] p-2 rounded-lg w-full'}}) }}
                </div>
                <div class="mb-4" id="reservationDateSection">
                    <label class="font-bold" for="">Date de réservation</label>
                    {{ form_widget(form.reservationDate, {'attr': {'class': 'border-2 border-[#B6BAAC] p-2 rounded-lg w-full'}}) }}
                </div>
                <div class="mb-4">
                    <label class="font-bold" for="">Nombre de personnes</label>
                    {{ form_widget(form.reservationPeaopleNumber, {'attr': {'class': 'border-2 border-[#B6BAAC] p-2 rounded-lg w-full'}}) }}
                </div>
            </div>
            <div class="col-span-1 pl-16">
                <div class="mb-4">
                    <label class="font-bold" for="">Total</label>
                    <div class="border-2 border-[#B6BAAC] p-2 rounded-lg">
                        <p id="calculatedPrice">0.00</p>
                    </div>
                </div>
                <div class="flex items-center justify-between">
                    {{ form_widget(form.save, {'attr': {'class': 'bg-green-600 p-2 text-white rounded-lg mx-auto w-full'}}) }}
                </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endif %}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const reservationCategoryField = document.getElementById("{{ form.reservationCategory.vars.id }}");
        const priceDisplay = document.getElementById("calculatedPrice");
        const peopleInput = document.querySelector('#{{ form.reservationPeaopleNumber.vars.id }}');
        const eventSelect = document.querySelector('#{{ form.event.vars.id }}');
        const locationSelect = document.querySelector('#{{ form.location.vars.id }}');
        const equipementSelect = document.querySelector('#{{ form.equipement.vars.id }}');
        const eventDateSection = document.getElementById("eventDateSection");
        const eventDateDisplay = document.getElementById("eventDate");
        const reservationDateSection = document.getElementById("reservationDateSection");

        // Fonction pour calculer le prix total en fonction du prix unitaire et du nombre de personnes
        function calculateTotal(pricePerUnit) {
            const peopleCount = parseInt(peopleInput.value) || 1;
            return (pricePerUnit * peopleCount).toFixed(2);
        }

        // Fonction pour mettre à jour le prix en fonction de l'élément sélectionné
        function updatePrice(selectElement) {
            if (selectElement) {
                const selectedOption = selectElement.options[selectElement.selectedIndex];
                const price = parseFloat(selectedOption.dataset.price || 0);
                priceDisplay.textContent = calculateTotal(price); // Affiche le prix calculé
            }
        }

        // Fonction pour mettre à jour la date de l'événement et le prix associé
        function updateEventDate(selectElement) {
            if (selectElement) {
                const selectedOption = selectElement.options[selectElement.selectedIndex];
                const eventDate = selectedOption.dataset.date || "Pas de date disponible";
                const eventPrice = parseFloat(selectedOption.dataset.price || 0);

                eventDateDisplay.textContent = eventDate;

                // Calculer le prix total basé sur l'événement sélectionné et le nombre de personnes
                priceDisplay.textContent = calculateTotal(eventPrice);

                // Auto-remplir la date de réservation avec la date de l'événement
                const reservationDateInput = document.querySelector('#{{ form.reservationDate.vars.id }}');
                reservationDateInput.value = eventDate;
            }
        }

        // Fonction pour afficher/masquer les sections en fonction de la catégorie de réservation
        function toggleSections() {
            const selectedCategory = reservationCategoryField.value;
            document.getElementById('eventSection').style.display = 'none';
            document.getElementById('locationSection').style.display = 'none';
            document.getElementById('equipementSection').style.display = 'none';
            eventDateSection.style.display = 'none';
            reservationDateSection.style.display = 'block';

            if (selectedCategory === 'event') {
                document.getElementById('eventSection').style.display = 'block';
                eventDateSection.style.display = 'block';
                reservationDateSection.style.display = 'none';
                updateEventDate(eventSelect);
            } else if (selectedCategory === 'location') {
                document.getElementById('locationSection').style.display = 'block';
                updatePrice(locationSelect);
            } else if (selectedCategory === 'equipement') {
                document.getElementById('equipementSection').style.display = 'block';
                updatePrice(equipementSelect);
            }
        }

        toggleSections();

        reservationCategoryField.addEventListener('change', toggleSections);
        if (peopleInput) peopleInput.addEventListener('input', toggleSections);
        if (eventSelect) eventSelect.addEventListener('change', () => updateEventDate(eventSelect));
        if (locationSelect) locationSelect.addEventListener('change', () => updatePrice(locationSelect));
        if (equipementSelect) equipementSelect.addEventListener('change', () => updatePrice(equipementSelect));
    });
</script>

</body>
</html>
{% endblock %}
